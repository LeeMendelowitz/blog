<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>On Coding</title><link href="http://leemendelowitz.github.io/blog/" rel="alternate"></link><link href="http://leemendelowitz.github.io/blog/feeds/r.atom.xml" rel="self"></link><id>http://leemendelowitz.github.io/blog/</id><updated>2013-10-13T00:00:00+02:00</updated><entry><title>mapply</title><link href="http://leemendelowitz.github.io/blog/mapply.html" rel="alternate"></link><updated>2013-10-13T00:00:00+02:00</updated><author><name>Lee Mendelowitz</name></author><id>tag:leemendelowitz.github.io/blog,2013-10-13:mapply.html</id><summary type="html">&lt;!--- mapply --&gt;

&lt;p&gt;&lt;a href="http://leemendelowitz.github.io/blog/computing_for_data_analysis/rmarkdown/mapply.rmd"&gt;Download as R Markdown&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mapply&lt;/code&gt; gives us a way to call a non-vectorized function in a vectorized way.&lt;/p&gt;
&lt;p&gt;From the R Documentation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mapply&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;multivariate&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;mapply&lt;/span&gt; &lt;span class="n"&gt;applies&lt;/span&gt; &lt;span class="n"&gt;FUN&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;
&lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="n"&gt;elements&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;argument&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt; &lt;span class="n"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;third&lt;/span&gt; &lt;span class="n"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Arguments&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;recycled&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;necessary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;mapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FUN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...,&lt;/span&gt; &lt;span class="n"&gt;MoreArgs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SIMPLIFY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;USE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NAMES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;list&lt;span class="p"&gt;(&lt;/span&gt;rep&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; rep&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; rep&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; rep&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## [[1]]&lt;/span&gt;
&lt;span class="c"&gt;## [1] 1 1 1 1&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## [[2]]&lt;/span&gt;
&lt;span class="c"&gt;## [1] 2 2 2&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## [[3]]&lt;/span&gt;
&lt;span class="c"&gt;## [1] 3 3&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## [[4]]&lt;/span&gt;
&lt;span class="c"&gt;## [1] 4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We see that we are repeatedly calling the same function (&lt;code&gt;rep&lt;/code&gt;) where the first argument varies from 1 to 4, and the second argument varies from 4 to 1.
Instead, we can use &lt;code&gt;mapply&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mapply&lt;span class="p"&gt;(&lt;/span&gt;rep&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## [[1]]&lt;/span&gt;
&lt;span class="c"&gt;## [1] 1 1 1 1&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## [[2]]&lt;/span&gt;
&lt;span class="c"&gt;## [1] 2 2 2&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## [[3]]&lt;/span&gt;
&lt;span class="c"&gt;## [1] 3 3&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## [[4]]&lt;/span&gt;
&lt;span class="c"&gt;## [1] 4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;noise &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;n&lt;span class="p"&gt;,&lt;/span&gt; mean&lt;span class="p"&gt;,&lt;/span&gt; std&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    rnorm&lt;span class="p"&gt;(&lt;/span&gt;n&lt;span class="p"&gt;,&lt;/span&gt; mean&lt;span class="p"&gt;,&lt;/span&gt; std&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
noise&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## [1] 0.84136 0.04806 1.89196 2.76464 4.95360&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The noise function is not vectorized. &lt;code&gt;mapply&lt;/code&gt; gives us a way to make a vectorized call to  &lt;code&gt;noise&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mapply&lt;span class="p"&gt;(&lt;/span&gt;noise&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## [[1]]&lt;/span&gt;
&lt;span class="c"&gt;## [1] 1.625&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## [[2]]&lt;/span&gt;
&lt;span class="c"&gt;## [1]  2.928 -1.840&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## [[3]]&lt;/span&gt;
&lt;span class="c"&gt;## [1] 2.459 4.195 1.939&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## [[4]]&lt;/span&gt;
&lt;span class="c"&gt;## [1] 5.195 3.731 5.249 2.959&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## [[5]]&lt;/span&gt;
&lt;span class="c"&gt;## [1] 8.291 1.949 5.751 4.250 4.868&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="R"></category><category term="Computing For Data Analysis"></category></entry><entry><title>R Base Graphics Plotting</title><link href="http://leemendelowitz.github.io/blog/r-base-graphics-plotting.html" rel="alternate"></link><updated>2013-10-13T00:00:00+02:00</updated><author><name>Lee Mendelowitz</name></author><id>tag:leemendelowitz.github.io/blog,2013-10-13:r-base-graphics-plotting.html</id><summary type="html">&lt;!--- R Base Graphics Plotting --&gt;

&lt;p&gt;&lt;a href="http://leemendelowitz.github.io/blog/computing_for_data_analysis/rmarkdown/basePlotting.rmd"&gt;Download as R Markdown&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Important parameters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;pch&lt;/strong&gt;: plotting symbol&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lty&lt;/strong&gt;: line type&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lwd&lt;/strong&gt;: line width&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;col&lt;/strong&gt;: plotting color&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;las&lt;/strong&gt;: orientation of axis labels &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;bg&lt;/strong&gt;: background color&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mar&lt;/strong&gt;: margin size&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;oma&lt;/strong&gt;: outer margin size&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mfrow&lt;/strong&gt;: number of plots per row, column. Plots filled in row-wise.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mfcol&lt;/strong&gt;: number of plots per row, column. Plots filled in column-wise.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Import functions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;plot&lt;/strong&gt;: make scatterplot&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lines&lt;/strong&gt;: add lines to plot&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;points&lt;/strong&gt;: add points to plot&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;text&lt;/strong&gt;: add text&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;title&lt;/strong&gt;: add title to axes or plot&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mtext&lt;/strong&gt;: add margin text&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;axis&lt;/strong&gt;: add axis tick/labels&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Example 1&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
y &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
plot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;,&lt;/span&gt; pch &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; mar &lt;span class="o"&gt;=&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; bg &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; xlim &lt;span class="o"&gt;=&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; ylim &lt;span class="o"&gt;=&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
fit &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; lm&lt;span class="p"&gt;(&lt;/span&gt;y &lt;span class="o"&gt;~&lt;/span&gt; x&lt;span class="p"&gt;)&lt;/span&gt;
abline&lt;span class="p"&gt;(&lt;/span&gt;fit&lt;span class="p"&gt;,&lt;/span&gt; lwd &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
title&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;My plot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
text&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;My Label&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
legend&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;topleft&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; legend &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; pch &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; pt.bg &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk example1" src="http://leemendelowitz.github.io/blog/computing_for_data_analysis/figure/baseplotting_example1.png" /&gt; &lt;/p&gt;
&lt;h3&gt;Example 2&lt;/h3&gt;
&lt;p&gt;To use multiple plots per page, give a &lt;code&gt;mfrow&lt;/code&gt; argument to plot. Then the plots will be filled from left to right across the rows. (Specifying &lt;code&gt;mfcol&lt;/code&gt; will fill in plots from top to bottom down the 
columns. )&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;z &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rpois&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
plot.new&lt;span class="p"&gt;()&lt;/span&gt;
par&lt;span class="p"&gt;(&lt;/span&gt;mfrow &lt;span class="o"&gt;=&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
par&lt;span class="p"&gt;(&lt;/span&gt;mar &lt;span class="o"&gt;=&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
plot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;,&lt;/span&gt; pch &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; main &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;plot 1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
plot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; z&lt;span class="p"&gt;,&lt;/span&gt; pch &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; main &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;plot 2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
plot&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;,&lt;/span&gt; z&lt;span class="p"&gt;,&lt;/span&gt; pch &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; main &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;plot 3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk example2" src="http://leemendelowitz.github.io/blog/computing_for_data_analysis/figure/baseplotting_example2.png" /&gt; &lt;/p&gt;
&lt;h3&gt;Example 3&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;points&lt;/code&gt; function is useful for adding points to a plot for different groups.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;plot.new&lt;span class="p"&gt;()&lt;/span&gt;
x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
y &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; x &lt;span class="o"&gt;+&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
g &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; gl&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; labels &lt;span class="o"&gt;=&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
str&lt;span class="p"&gt;(&lt;/span&gt;g&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;##  Factor w/ 2 levels &amp;quot;Male&amp;quot;,&amp;quot;Female&amp;quot;: 1 1 1 1 1 1 1 1 1 1 ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="p"&gt;,&lt;/span&gt; type &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Draws no points&lt;/span&gt;
points&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;[&lt;/span&gt;g &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; y&lt;span class="p"&gt;[&lt;/span&gt;g &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; pch &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
points&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;[&lt;/span&gt;g &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; y&lt;span class="p"&gt;[&lt;/span&gt;g &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; pch &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;19&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
legend&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;topleft&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; col &lt;span class="o"&gt;=&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; pch &lt;span class="o"&gt;=&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;19&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk example3" src="http://leemendelowitz.github.io/blog/computing_for_data_analysis/figure/baseplotting_example3.png" /&gt; &lt;/p&gt;</summary><category term="R"></category><category term="Computing For Data Analysis"></category></entry><entry><title>tapply and split</title><link href="http://leemendelowitz.github.io/blog/tapply-and-split.html" rel="alternate"></link><updated>2013-10-13T00:00:00+02:00</updated><author><name>Lee Mendelowitz</name></author><id>tag:leemendelowitz.github.io/blog,2013-10-13:tapply-and-split.html</id><summary type="html">&lt;!--- tapply and split --&gt;

&lt;p&gt;&lt;a href="http://leemendelowitz.github.io/blog/computing_for_data_analysis/rmarkdown/tapply_and_split.rmd"&gt;Download as R Markdown&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;tapply&lt;/h2&gt;
&lt;p&gt;Apply a function over subsets of a vector.&lt;/p&gt;
&lt;h3&gt;Example: Take group means with tapply.&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; runif&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
x
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;##  [1] -2.04333  0.72651  1.55476 -0.12411  1.08133 -0.30514  1.38638&lt;/span&gt;
&lt;span class="c"&gt;##  [8]  0.35047  0.88147  1.80250  0.56072  0.54421  0.19270  0.67049&lt;/span&gt;
&lt;span class="c"&gt;## [15]  0.83034  0.02640  0.98629  0.11223  0.10747  0.85049  1.37510&lt;/span&gt;
&lt;span class="c"&gt;## [22]  0.56575  0.34138  1.01877  1.33956 -0.07667  2.12114  0.70827&lt;/span&gt;
&lt;span class="c"&gt;## [29]  0.53336  2.15315&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;f &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; gl&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Generator factors&lt;/span&gt;
f
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;##  [1] 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3&lt;/span&gt;
&lt;span class="c"&gt;## Levels: 1 2 3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;By default, if the applied function returns a scalar, then tapply
returns a vector. In this case we are applying the mean function,
so the output of tapply is a numeric vector.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;tapply&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; f&lt;span class="p"&gt;,&lt;/span&gt; mean&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Take the mean of each group. Returns a vector.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;##      1      2      3 &lt;/span&gt;
&lt;span class="c"&gt;## 0.5311 0.4881 1.0080&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Without simplification, tapply always returns a list.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;tapply&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; f&lt;span class="p"&gt;,&lt;/span&gt; mean&lt;span class="p"&gt;,&lt;/span&gt; simplify &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## $`1`&lt;/span&gt;
&lt;span class="c"&gt;## [1] 0.5311&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`2`&lt;/span&gt;
&lt;span class="c"&gt;## [1] 0.4881&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`3`&lt;/span&gt;
&lt;span class="c"&gt;## [1] 1.008&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example: Find the group range&lt;/h3&gt;
&lt;p&gt;Range returns the minimum and maximum value for each group.
Note that since the range function returns a vector, tapply returns
a list.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;tapply&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; f&lt;span class="p"&gt;,&lt;/span&gt; range&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## $`1`&lt;/span&gt;
&lt;span class="c"&gt;## [1] -2.043  1.803&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`2`&lt;/span&gt;
&lt;span class="c"&gt;## [1] 0.0264 0.9863&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`3`&lt;/span&gt;
&lt;span class="c"&gt;## [1] -0.07667  2.15315&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;split&lt;/h2&gt;
&lt;p&gt;The split function splits a vector int groups using a factor.
Using split and then applying a function with lapply produces the same 
resule as tapply:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;split&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; f&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## $`1`&lt;/span&gt;
&lt;span class="c"&gt;##  [1] -2.0433  0.7265  1.5548 -0.1241  1.0813 -0.3051  1.3864  0.3505&lt;/span&gt;
&lt;span class="c"&gt;##  [9]  0.8815  1.8025&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`2`&lt;/span&gt;
&lt;span class="c"&gt;##  [1] 0.5607 0.5442 0.1927 0.6705 0.8303 0.0264 0.9863 0.1122 0.1075 0.8505&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`3`&lt;/span&gt;
&lt;span class="c"&gt;##  [1]  1.37510  0.56575  0.34138  1.01877  1.33956 -0.07667  2.12114&lt;/span&gt;
&lt;span class="c"&gt;##  [8]  0.70827  0.53336  2.15315&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;lapply&lt;span class="p"&gt;(&lt;/span&gt;split&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; f&lt;span class="p"&gt;),&lt;/span&gt; mean&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Instead of tapply&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## $`1`&lt;/span&gt;
&lt;span class="c"&gt;## [1] 0.5311&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`2`&lt;/span&gt;
&lt;span class="c"&gt;## [1] 0.4881&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`3`&lt;/span&gt;
&lt;span class="c"&gt;## [1] 1.008&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Example: Air Quality by month&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;library&lt;span class="p"&gt;(&lt;/span&gt;datasets&lt;span class="p"&gt;)&lt;/span&gt;
head&lt;span class="p"&gt;(&lt;/span&gt;airquality&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;##   Ozone Solar.R Wind Temp Month Day&lt;/span&gt;
&lt;span class="c"&gt;## 1    41     190  7.4   67     5   1&lt;/span&gt;
&lt;span class="c"&gt;## 2    36     118  8.0   72     5   2&lt;/span&gt;
&lt;span class="c"&gt;## 3    12     149 12.6   74     5   3&lt;/span&gt;
&lt;span class="c"&gt;## 4    18     313 11.5   62     5   4&lt;/span&gt;
&lt;span class="c"&gt;## 5    NA      NA 14.3   56     5   5&lt;/span&gt;
&lt;span class="c"&gt;## 6    28      NA 14.9   66     5   6&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;s &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; split&lt;span class="p"&gt;(&lt;/span&gt;airquality&lt;span class="p"&gt;,&lt;/span&gt; airquality&lt;span class="o"&gt;$&lt;/span&gt;Month&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;s&lt;/code&gt; is a list of dataframes split by month:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;class&lt;span class="p"&gt;(&lt;/span&gt;s&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## [1] &amp;quot;list&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;class&lt;span class="p"&gt;(&lt;/span&gt;s&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## [1] &amp;quot;data.frame&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;lapply&lt;span class="p"&gt;(&lt;/span&gt;s&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; head&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; n &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## $`5`&lt;/span&gt;
&lt;span class="c"&gt;##   Ozone Solar.R Wind Temp Month Day&lt;/span&gt;
&lt;span class="c"&gt;## 1    41     190  7.4   67     5   1&lt;/span&gt;
&lt;span class="c"&gt;## 2    36     118  8.0   72     5   2&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`6`&lt;/span&gt;
&lt;span class="c"&gt;##    Ozone Solar.R Wind Temp Month Day&lt;/span&gt;
&lt;span class="c"&gt;## 32    NA     286  8.6   78     6   1&lt;/span&gt;
&lt;span class="c"&gt;## 33    NA     287  9.7   74     6   2&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`7`&lt;/span&gt;
&lt;span class="c"&gt;##    Ozone Solar.R Wind Temp Month Day&lt;/span&gt;
&lt;span class="c"&gt;## 62   135     269  4.1   84     7   1&lt;/span&gt;
&lt;span class="c"&gt;## 63    49     248  9.2   85     7   2&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`8`&lt;/span&gt;
&lt;span class="c"&gt;##    Ozone Solar.R Wind Temp Month Day&lt;/span&gt;
&lt;span class="c"&gt;## 93    39      83  6.9   81     8   1&lt;/span&gt;
&lt;span class="c"&gt;## 94     9      24 13.8   81     8   2&lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`9`&lt;/span&gt;
&lt;span class="c"&gt;##     Ozone Solar.R Wind Temp Month Day&lt;/span&gt;
&lt;span class="c"&gt;## 124    96     167  6.9   91     9   1&lt;/span&gt;
&lt;span class="c"&gt;## 125    78     197  5.1   92     9   2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After splitting by month, we can use &lt;code&gt;lapply&lt;/code&gt; to take the column means:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;takeMeans &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; colMeans&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;[,&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Ozone&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Solar.R&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Wind&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; na.rm &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
lapply&lt;span class="p"&gt;(&lt;/span&gt;s&lt;span class="p"&gt;,&lt;/span&gt; takeMeans&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## $`5`&lt;/span&gt;
&lt;span class="c"&gt;##   Ozone Solar.R    Wind &lt;/span&gt;
&lt;span class="c"&gt;##   23.62  181.30   11.62 &lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`6`&lt;/span&gt;
&lt;span class="c"&gt;##   Ozone Solar.R    Wind &lt;/span&gt;
&lt;span class="c"&gt;##   29.44  190.17   10.27 &lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`7`&lt;/span&gt;
&lt;span class="c"&gt;##   Ozone Solar.R    Wind &lt;/span&gt;
&lt;span class="c"&gt;##  59.115 216.484   8.942 &lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`8`&lt;/span&gt;
&lt;span class="c"&gt;##   Ozone Solar.R    Wind &lt;/span&gt;
&lt;span class="c"&gt;##  59.962 171.857   8.794 &lt;/span&gt;
&lt;span class="c"&gt;## &lt;/span&gt;
&lt;span class="c"&gt;## $`9`&lt;/span&gt;
&lt;span class="c"&gt;##   Ozone Solar.R    Wind &lt;/span&gt;
&lt;span class="c"&gt;##   31.45  167.43   10.18&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using &lt;code&gt;sapply&lt;/code&gt; instead of &lt;code&gt;lapply&lt;/code&gt; simplifies the output into a matrix,
so we can easily see the mean values by month.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sapply&lt;span class="p"&gt;(&lt;/span&gt;s&lt;span class="p"&gt;,&lt;/span&gt; takeMeans&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;##              5      6       7       8      9&lt;/span&gt;
&lt;span class="c"&gt;## Ozone    23.62  29.44  59.115  59.962  31.45&lt;/span&gt;
&lt;span class="c"&gt;## Solar.R 181.30 190.17 216.484 171.857 167.43&lt;/span&gt;
&lt;span class="c"&gt;## Wind     11.62  10.27   8.942   8.794  10.18&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Splitting on more than one level&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
f1 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; gl&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Create a factor with two levels&lt;/span&gt;
f2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; gl&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Create a factor with five levels&lt;/span&gt;
str&lt;span class="p"&gt;(&lt;/span&gt;f1&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;##  Factor w/ 2 levels &amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;: 1 1 1 1 1 2 2 2 2 2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;str&lt;span class="p"&gt;(&lt;/span&gt;f2&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;##  Factor w/ 5 levels &amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;,&amp;quot;4&amp;quot;,..: 1 1 2 2 3 3 4 4 5 5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;interaction&lt;span class="p"&gt;(&lt;/span&gt;f1&lt;span class="p"&gt;,&lt;/span&gt; f2&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Compute a factor with 10 levels, which is the interaction of the two factors&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;##  [1] 1.1 1.1 1.2 1.2 1.3 2.3 2.4 2.4 2.5 2.5&lt;/span&gt;
&lt;span class="c"&gt;## Levels: 1.1 2.1 1.2 2.2 1.3 2.3 1.4 2.4 1.5 2.5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that some levels of the interaction are empty for our data vector &lt;code&gt;x&lt;/code&gt;. For example, none of the samples in &lt;code&gt;x&lt;/code&gt; have level 2.1.&lt;/p&gt;
&lt;p&gt;We can use multiple factor levels with &lt;code&gt;split&lt;/code&gt; by passing the interaction
factor. Instead of calling &lt;code&gt;interaction&lt;/code&gt; explicitly, if we pass the factors in a list, the &lt;code&gt;interaction&lt;/code&gt; function is automatically called:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;str&lt;span class="p"&gt;(&lt;/span&gt;split&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; list&lt;span class="p"&gt;(&lt;/span&gt;f1&lt;span class="p"&gt;,&lt;/span&gt; f2&lt;span class="p"&gt;)))&lt;/span&gt;  &lt;span class="c1"&gt;# Automatically calls interaction(f1,f2)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## List of 10&lt;/span&gt;
&lt;span class="c"&gt;##  $ 1.1: num [1:2] 0.993 0.939&lt;/span&gt;
&lt;span class="c"&gt;##  $ 2.1: num(0) &lt;/span&gt;
&lt;span class="c"&gt;##  $ 1.2: num [1:2] 1.092 -0.382&lt;/span&gt;
&lt;span class="c"&gt;##  $ 2.2: num(0) &lt;/span&gt;
&lt;span class="c"&gt;##  $ 1.3: num -0.985&lt;/span&gt;
&lt;span class="c"&gt;##  $ 2.3: num 1.53&lt;/span&gt;
&lt;span class="c"&gt;##  $ 1.4: num(0) &lt;/span&gt;
&lt;span class="c"&gt;##  $ 2.4: num [1:2] -0.066 -1.64&lt;/span&gt;
&lt;span class="c"&gt;##  $ 1.5: num(0) &lt;/span&gt;
&lt;span class="c"&gt;##  $ 2.5: num [1:2] 0.452 -1.324&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that some levels are empty, but they still appear in list output by
&lt;code&gt;split&lt;/code&gt;.  Empty levels can be dropped by passing  &lt;code&gt;drop = TRUE&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;str&lt;span class="p"&gt;(&lt;/span&gt;split&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; list&lt;span class="p"&gt;(&lt;/span&gt;f1&lt;span class="p"&gt;,&lt;/span&gt; f2&lt;span class="p"&gt;),&lt;/span&gt; drop &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;## List of 6&lt;/span&gt;
&lt;span class="c"&gt;##  $ 1.1: num [1:2] 0.993 0.939&lt;/span&gt;
&lt;span class="c"&gt;##  $ 1.2: num [1:2] 1.092 -0.382&lt;/span&gt;
&lt;span class="c"&gt;##  $ 1.3: num -0.985&lt;/span&gt;
&lt;span class="c"&gt;##  $ 2.3: num 1.53&lt;/span&gt;
&lt;span class="c"&gt;##  $ 2.4: num [1:2] -0.066 -1.64&lt;/span&gt;
&lt;span class="c"&gt;##  $ 2.5: num [1:2] 0.452 -1.324&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="R"></category><category term="Computing For Data Analysis"></category></entry></feed>